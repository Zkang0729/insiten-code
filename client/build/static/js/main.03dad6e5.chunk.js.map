{"version":3,"sources":["reducers/companyReducer.js","reducers/index.js","actions/types.js","store.js","actions/companyActions.js","components/layout/FuncBtn.jsx","components/layout/TargetBar.jsx","components/layout/Header.jsx","components/layout/Preloader.jsx","components/companies/Company.jsx","components/companies/Companies.jsx","components/layout/StatusModal.jsx","components/companies/AddCompanyModal.jsx","components/companies/EditCompanyModal.jsx","App.js","index.js"],"names":["initialState","companies","company","sortedCompanies","current","loading","search","error","closestCompany","target","i","length","diff","Math","abs","Revenue","j","temp","combineReducers","state","action","type","payload","map","id","filter","console","sort","a","b","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","getAllCompany","dispatch","async","setLoading","fetch","res","json","data","response","statusText","ltsSort","stlSort","chevronUp","transform","chevronDown","connect","className","onClick","style","href","searchCompanies","text","targetRevenue","setSearch","clearSearch","useEffect","useRef","marginBottom","placeholder","ref","onChange","value","htmlFor","e","Number","class","Preloader","deleteCompany","method","setCurrent","Status","Name","Location","M","toast","html","com","key","_id","comp","modalStyle","width","height","addCompany","body","JSON","stringify","headers","useState","name","setName","status","setStatus","revenue","setRevenue","location","setLocation","updateCompany","updCompany","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03dad6e5.chunk.js","sourcesContent":["import {\n  GET_ALL_COMPANY,\n  GET_COMPANY,\n  ADD_COMPANY,\n  UPDATE_COMPANY,\n  DELETE_COMPANY,\n  COMPANY_ERROR,\n  SET_LOADING,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  SEARCH_COMPANY,\n  TARGET_REVENUE,\n  SET_SEARCH,\n  CLEAR_SEARCH,\n  LARGE_TO_SMALL_SORT,\n  SMALL_TO_LARGE_SORT,\n} from \"../actions/types\";\n\nconst initialState = {\n  companies: [],\n  company: null,\n  sortedCompanies: [],\n  current: null,\n  loading: false,\n  search: false,\n  error: null,\n};\n\nconst closestCompany = (companies, target) => {\n  var closestCompany = companies;\n  // Below lines are similar to insertion sort\n  for (var i = 1; i < closestCompany.length; i++) {\n    var diff = Math.abs(closestCompany[i].Revenue - target);\n\n    // Insert closestCompany[i] at correct place\n    var j = i - 1;\n    if (Math.abs(closestCompany[j].Revenue - target) > diff) {\n      var temp = closestCompany[i];\n      while (j >= 0 && Math.abs(closestCompany[j].Revenue - target) > diff) {\n        closestCompany[j + 1] = closestCompany[j];\n        j--;\n      }\n      closestCompany[j + 1] = temp;\n    }\n  }\n  return closestCompany;\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_ALL_COMPANY:\n      return {\n        ...state,\n        companies: action.payload,\n      };\n    case GET_COMPANY:\n      return {\n        ...state,\n        company: action.payload,\n      };\n    case ADD_COMPANY:\n      return {\n        ...state,\n        companies: [...state.companies, action.payload],\n        loading: false,\n      };\n    case UPDATE_COMPANY:\n      return {\n        ...state,\n        companies: state.companies.map(company =>\n          company.id === action.payload.id ? action.payload : company,\n        ),\n        loading: false,\n      };\n    case DELETE_COMPANY:\n      return {\n        ...state,\n        companies: state.companies.filter(\n          company => company.id !== action.payload,\n        ),\n        loading: false,\n      };\n    case SEARCH_COMPANY:\n      return {\n        ...state,\n        companies: action.payload,\n      };\n    case SET_SEARCH:\n      return {\n        ...state,\n        search: true,\n      };\n    case CLEAR_SEARCH:\n      return {\n        ...state,\n        search: false,\n      };\n    case TARGET_REVENUE:\n      return {\n        ...state,\n        sortedCompanies: closestCompany([...state.companies], action.payload),\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case COMPANY_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case LARGE_TO_SMALL_SORT:\n      return {\n        ...state,\n        companies: state.companies.sort((a, b) => {\n          if (a.Revenue > b.Revenue) return 1;\n          if (a.Revenue < b.Revenue) return -1;\n          return 0;\n        }),\n      };\n    case SMALL_TO_LARGE_SORT:\n      return {\n        ...state,\n        companies: state.companies.sort((a, b) => {\n          if (a.Revenue > b.Revenue) return -1;\n          if (a.Revenue < b.Revenue) return 1;\n          return 0;\n        }),\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport companyReducer from \"./companyReducer\";\n\nexport default combineReducers({\n  company: companyReducer,\n});\n","export const GET_ALL_COMPANY = \"GET_ALL_COMPANY\";\nexport const GET_COMPANY = \"GET_COMPANY\";\nexport const ADD_COMPANY = \"ADD_COMPANY\";\nexport const UPDATE_COMPANY = \"UPDATE_COMPANY\";\nexport const DELETE_COMPANY = \"DELETE_COMPANY\";\nexport const COMPANY_ERROR = \"COMPANY_ERROR\";\nexport const SEARCH_COMPANY = \"SEARCH_COMPANY\";\nexport const TARGET_REVENUE = \"TARGET_REVENUE\";\nexport const SET_SEARCH = \"SET_SEARCH\";\nexport const CLEAR_SEARCH = \"CLEAR_SEARCH\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const SET_CURRENT = \"SET_CURRENT\";\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\nexport const LARGE_TO_SMALL_SORT = \"LARGE_TO_SMALL_SORT\";\nexport const SMALL_TO_LARGE_SORT = \"SMALL_TO_LARGE_SORT\";\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nexport default store;\n","import {\n  GET_ALL_COMPANY,\n  GET_COMPANY,\n  ADD_COMPANY,\n  UPDATE_COMPANY,\n  DELETE_COMPANY,\n  COMPANY_ERROR,\n  SET_LOADING,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  SEARCH_COMPANY,\n  TARGET_REVENUE,\n  SET_SEARCH,\n  CLEAR_SEARCH,\n  LARGE_TO_SMALL_SORT,\n  SMALL_TO_LARGE_SORT,\n} from \"../actions/types\";\n\n// Get all companies from server\nexport const getAllCompany = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/api/companies\");\n    const data = await res.json();\n    dispatch({\n      type: GET_ALL_COMPANY,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n// Get a specific company from server\nexport const getCompany = id => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/api/companies/${id}`);\n    const data = await res.json();\n    dispatch({\n      type: GET_COMPANY,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Add new company\nexport const addCompany = company => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/api/companies\", {\n      method: \"POST\",\n      body: JSON.stringify(company),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_COMPANY,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Delete company from server\nexport const deleteCompany = id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`/api/companies/${id}`, {\n      method: \"DELETE\",\n    });\n    dispatch({\n      type: DELETE_COMPANY,\n      payload: id,\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Update company on server\nexport const updateCompany = company => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/api/companies/${company.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(company),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await res.json();\n    dispatch({\n      type: UPDATE_COMPANY,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n// Search server companies\nexport const searchCompanies = text => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/api/companies/search?q=${text}`);\n    const data = await res.json();\n    dispatch({\n      type: SEARCH_COMPANY,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n// Search for target revenue company\nexport const targetRevenue = target => {\n  setLoading();\n  return {\n    type: TARGET_REVENUE,\n    payload: target,\n  };\n};\n\n// Set search to true\nexport const setSearch = () => {\n  return {\n    type: SET_SEARCH,\n  };\n};\n\n// Set search to false\nexport const clearSearch = () => {\n  return {\n    type: CLEAR_SEARCH,\n  };\n};\n\n//Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n\n// Set current company\nexport const setCurrent = company => {\n  return {\n    type: SET_CURRENT,\n    payload: company,\n  };\n};\n\n// Clear current company\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT,\n  };\n};\n\n// Large to small sort\nexport const ltsSort = () => {\n  return {\n    type: LARGE_TO_SMALL_SORT,\n  };\n};\n\n// Small to large sort\nexport const stlSort = () => {\n  return {\n    type: SMALL_TO_LARGE_SORT,\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ltsSort, stlSort } from \"../../actions/companyActions\";\n\nconst FuncBtn = ({ ltsSort, stlSort }) => {\n  return (\n    <div className='fixed-action-btn'>\n      <a className='btn-floating btn-large blue darken-2'>\n        <i className='large material-icons'>menu</i>\n      </a>\n      <ul>\n        <li>\n          <a className='btn-floating yellow darken-1' onClick={ltsSort}>\n            <i className='material-icons' style={chevronUp}>\n              chevron_left\n            </i>\n          </a>\n        </li>\n        <li>\n          <a className='btn-floating yellow darken-1' onClick={stlSort}>\n            <i className='material-icons' style={chevronDown}>\n              chevron_left\n            </i>\n          </a>\n        </li>\n        <li>\n          <a\n            href='#add-company-modal'\n            className='btn-floating red modal-trigger'>\n            <i className='large material-icons'>add</i>\n          </a>\n        </li>\n        <li>\n          <a className='blue btn-floating modal-trigger' href='#status-modal'>\n            <i className='large material-icons'>info</i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nconst chevronUp = {\n  transform: \"rotate(90deg)\",\n};\n\nconst chevronDown = {\n  transform: \"rotate(-90deg)\",\n};\n\nexport default connect(null, { stlSort, ltsSort })(FuncBtn);\n","import React, { useRef, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  searchCompanies,\n  targetRevenue,\n  getAllCompany,\n  setSearch,\n  clearSearch,\n} from \"../../actions/companyActions\";\n\nimport \"./TargetBar.css\";\n\nconst TargetBar = ({\n  searchCompanies,\n  targetRevenue,\n  getAllCompany,\n  setSearch,\n  clearSearch,\n}) => {\n  useEffect(() => {\n    getAllCompany();\n    //eslint-disable-next-line\n  }, []);\n\n  const text = useRef(\"\");\n  const target = useRef(\"\");\n\n  const onChange = () => {\n    searchCompanies(text.current.value);\n  };\n\n  const targetSearch = e => {\n    setSearch();\n    targetRevenue(Number(target.current.value));\n    if (e.target.value === \"\") {\n      clearSearch();\n    }\n  };\n\n  return (\n    <nav style={{ marginBottom: \"30px\" }} className='blue'>\n      <div className='nav-wrapper'>\n        <form>\n          <div className='input-field searchBar'>\n            <input\n              id='search'\n              type='search'\n              placeholder=\"Type in a company's name or location\"\n              ref={text}\n              onChange={onChange}\n            />\n            <label className='label-icon' htmlFor='search'>\n              <i className='material-icons'>search</i>\n            </label>\n            <i className='material-icons'>close</i>\n          </div>\n          <div className='input-field searchBar'>\n            <input\n              id='targetSearch'\n              type='search'\n              ref={target}\n              placeholder='Type in a target revenue'\n              onChange={targetSearch}\n            />\n            <label className='label-icon' htmlFor='targetSearch'>\n              <i className='material-icons'>search</i>\n            </label>\n            <i className='material-icons'>close</i>\n          </div>\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nTargetBar.propTypes = {\n  searchCompanies: PropTypes.func.isRequired,\n  targetRevenue: PropTypes.func.isRequired,\n  getAllCompany: PropTypes.func.isRequired,\n  setSearch: PropTypes.func.isRequired,\n  clearSearch: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {\n  searchCompanies,\n  targetRevenue,\n  getAllCompany,\n  setSearch,\n  clearSearch,\n})(TargetBar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ltsSort, stlSort } from \"../../actions/companyActions\";\n\nconst Header = ({ ltsSort, stlSort }) => {\n  return (\n    <li className='collection-header'>\n      <nav>\n        <div class='nav-wrapper blue'>\n          <ul id='nav-mobile' class='left hide-on-med-and-down'>\n            <li>\n              <a className='btn-floating yellow darken-1' onClick={ltsSort}>\n                <i className='material-icons' style={chevronUp}>\n                  chevron_left\n                </i>\n              </a>\n            </li>\n            <li>\n              <a className='btn-floating yellow darken-1' onClick={stlSort}>\n                <i className='material-icons' style={chevronDown}>\n                  chevron_left\n                </i>\n              </a>\n            </li>\n          </ul>\n          <a href='#' class='brand-logo center'>\n            Company List\n          </a>\n          <ul id='nav-mobile' className='right hide-on-med-and-down'>\n            <li>\n              <a\n                href='#add-company-modal'\n                className='btn-floating red modal-trigger'>\n                <i className='large material-icons'>add</i>\n              </a>\n            </li>\n            <li>\n              <a\n                className='blue btn-floating modal-trigger'\n                href='#status-modal'>\n                <i className='large material-icons'>info</i>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </li>\n  );\n};\n\nconst chevronUp = {\n  transform: \"rotate(90deg)\",\n};\n\nconst chevronDown = {\n  transform: \"rotate(-90deg)\",\n};\n\nexport default connect(null, { stlSort, ltsSort })(Header);\n","import React from \"react\";\n\nconst Preloader = () => {\n  return (\n    <div className='progress blue lighten-4'>\n      <div className='indeterminate blue' />\n    </div>\n  );\n};\n\nexport default Preloader;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { deleteCompany, setCurrent } from \"../../actions/companyActions\";\nimport \"./Company.css\";\n\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst Company = ({ company, deleteCompany, setCurrent }) => {\n  const onDelete = () => {\n    deleteCompany(company.id);\n    M.toast({ html: \"Company Deleted\" });\n  };\n\n  return (\n    <li\n      className='collection-item important modal-trigger'\n      href='#edit-company-modal'\n      onClick={() => setCurrent(company)}>\n      <div\n        className={`card-panel ${\n          company.Status === \"Researching\"\n            ? \"blue\"\n            : company.Status === \"Declined\"\n            ? \"red\"\n            : \"green\"\n        }`}>\n        <a className=' white-text'>\n          {company.Name + \"   \"}\n          <span className='white-text'>Revenue: {company.Revenue}</span>\n        </a>\n        <br />\n        <span className='grey-text sub-information'>\n          <span className='white-text'>Status: {company.Status}</span>\n          {\"  \"}\n          <span className='white-text'>Location: {company.Location}</span>\n        </span>\n        <a\n          href='#!'\n          onClick={onDelete}\n          className='secondary-content delete-icon'>\n          <i className='material-icons grey-text small'>delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nCompany.propTypes = {\n  company: PropTypes.object.isRequired,\n  deleteCompany: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteCompany, setCurrent })(Company);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Preloader from \"../layout/Preloader\";\nimport Company from \"./Company\";\nimport { getAllCompany } from \"../../actions/companyActions\";\n\nconst Companies = ({\n  company: { loading, companies, search, sortedCompanies },\n  getAllCompany,\n}) => {\n  useEffect(() => {\n    getAllCompany();\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading || companies === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <ul className='collection'>\n      {!loading && !search && companies.length === 0 ? (\n        <p className='center'>No companies to show...</p>\n      ) : search ? (\n        sortedCompanies.map(com => <Company company={com} key={com._id} />)\n      ) : (\n        companies.map(comp => <Company company={comp} key={comp._id} />)\n      )}\n    </ul>\n  );\n};\n\nCompanies.propTypes = {\n  companies: PropTypes.array.isRequired,\n  sortedCompanies: PropTypes.array,\n  search: PropTypes.bool.isRequired,\n  getAllCompany: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  company: state.company,\n});\n\nexport default connect(mapStateToProps, { getAllCompany })(Companies);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getAllCompany } from \"../../actions/companyActions\";\n\nimport \"./StatusModal.css\";\n\nconst StatusModal = ({ companies, getAllCompany }) => {\n  useEffect(() => {\n    getAllCompany();\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <div id='status-modal' className='modal' style={modalStyle}>\n      <div className='modal-content blue white-text status'>\n        <h2>\n          Approved:{\" \"}\n          {companies.filter(company => company.Status === \"Approved\").length}\n        </h2>\n        <h2>\n          Researching:{\" \"}\n          {companies.filter(company => company.Status === \"Researching\").length}\n        </h2>\n        <h2>\n          Declined:{\" \"}\n          {companies.filter(company => company.Status === \"Declined\").length}\n        </h2>\n      </div>\n    </div>\n  );\n};\n\nStatusModal.propTypes = {\n  companies: PropTypes.array.isRequired,\n  getAllCompany: PropTypes.func.isRequired,\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\",\n};\n\nconst mapStateToProps = state => ({\n  companies: state.company.companies,\n});\n\nexport default connect(mapStateToProps, { getAllCompany })(StatusModal);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { addCompany } from \"../../actions/companyActions\";\n\nconst AddCompanyModal = ({ addCompany }) => {\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [revenue, setRevenue] = useState(0);\n  const [location, setLocation] = useState(\"\");\n\n  const onSubmit = () => {\n    if (name === \"\" || status === \"\" || revenue === null || location === \"\") {\n      M.toast({ html: \"Please enter all required field!\" });\n    } else {\n      const newCompany = {\n        Name: name,\n        Status: status,\n        Revenue: revenue,\n        Location: location,\n      };\n\n      addCompany(newCompany);\n      M.toast({ html: \"Company Added!\" });\n\n      // Clear Fields\n      setName(\"\");\n      setStatus(\"\");\n      setRevenue(0);\n      setLocation(\"\");\n    }\n  };\n\n  return (\n    <div id='add-company-modal' className='modal' style={modalStyle}>\n      <div className='modal-content'>\n        <h4>Add Company</h4>\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='name'\n              value={name}\n              onChange={e => setName(e.target.value)}\n              placeholder='Company Name (i.e. SpaceX Inc.)'\n            />\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='status'\n              value={status}\n              onChange={e => setStatus(e.target.value)}\n              placeholder='Assessment Status'\n            />\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='revenue'\n              onChange={e => setRevenue(Number(e.target.value))}\n              placeholder='Annual Revenue'\n            />\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='location'\n              value={location}\n              onChange={e => setLocation(e.target.value)}\n              placeholder='Location'\n            />\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect blue waves-light btn'>\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\",\n};\n\nAddCompanyModal.propTypes = {\n  addCompany: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addCompany })(AddCompanyModal);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { updateCompany } from \"../../actions/companyActions\";\n\nconst EditCompanyModal = ({ current, updateCompany }) => {\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [revenue, setRevenue] = useState(0);\n  const [location, setLocation] = useState(\"\");\n\n  useEffect(() => {\n    if (current) {\n      setName(current.Name);\n      setStatus(current.Status);\n      setRevenue(current.Revenue);\n      setLocation(current.Location);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    if (name === \"\" || status === \"\" || revenue === null || location === \"\") {\n      M.toast({ html: \"Please enter all required field!\" });\n    } else {\n      const updCompany = {\n        _id: current._id,\n        Name: name,\n        Status: status,\n        Revenue: revenue,\n        Location: location,\n      };\n\n      updateCompany(updCompany);\n      M.toast({ html: \"Company updated!\" });\n\n      // Clear Fields\n      setName(\"\");\n      setStatus(\"\");\n      setRevenue(0);\n      setLocation(\"\");\n    }\n  };\n\n  return (\n    <div id='edit-company-modal' className='modal' style={modalStyle}>\n      <div className='modal-content'>\n        <h4>Edit Company</h4>\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='name'\n              value={name}\n              onChange={e => setName(e.target.value)}\n              placeholder='Company Name (i.e. SpaceX Inc.)'\n            />\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='status'\n              value={status}\n              onChange={e => setStatus(e.target.value)}\n              placeholder='Assessment Status'\n            />\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='revenue'\n              value={revenue}\n              onChange={e => setRevenue(Number(e.target.value))}\n              placeholder='Annual Revenue'\n            />\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='location'\n              value={location}\n              onChange={e => setLocation(e.target.value)}\n              placeholder='Location'\n            />\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect blue waves-light btn'>\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\",\n};\n\nEditCompanyModal.propTypes = {\n  current: PropTypes.object,\n  updateCompany: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  current: state.company.current,\n});\n\nexport default connect(mapStateToProps, { updateCompany })(EditCompanyModal);\n","import React, { Fragment, useEffect } from \"react\";\nimport \"./App.css\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport FuncBtn from \"./components/layout/FuncBtn\";\nimport TargetBar from \"./components/layout/TargetBar\";\nimport Header from \"./components/layout/Header\";\nimport Companies from \"./components/companies/Companies\";\nimport StatusModal from \"./components/layout/StatusModal\";\nimport AddCompanyModal from \"./components/companies/AddCompanyModal\";\nimport EditCompanyModal from \"./components/companies/EditCompanyModal\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport \"./App.css\";\n\nconst App = () => {\n  useEffect(() => {\n    //Init Materialize JS\n    M.AutoInit();\n  });\n\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <TargetBar />\n        <div className='container'>\n          <Header />\n          <FuncBtn />\n          <StatusModal />\n          <AddCompanyModal />\n          <EditCompanyModal />\n          <Companies />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}