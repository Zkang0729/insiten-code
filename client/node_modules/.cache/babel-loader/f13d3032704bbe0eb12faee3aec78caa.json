{"ast":null,"code":"import _objectSpread from \"/home/harry/Desktop/Insiten-code/company/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_ALL_COMPANY, GET_COMPANY, ADD_COMPANY, UPDATE_COMPANY, DELETE_COMPANY, COMPANY_ERROR, SET_LOADING, SET_CURRENT, CLEAR_CURRENT, SEARCH_COMPANY, TARGET_REVENUE, SET_SEARCH } from \"../actions/types\";\nconst initialState = {\n  companies: [],\n  company: null,\n  current: null,\n  loading: false,\n  search: false,\n  error: null\n};\n\nconst closestCompany = (companies, target) => {\n  var closestCompany = null;\n  var differenceList = [];\n\n  for (var i = 0; i < companies.length; i++) {\n    differenceList[i] = Math.abs(companies[i].Revenue - target);\n  }\n\n  var largest = 0;\n\n  for (var j = 0; j < differenceList.length; j++) {\n    if (differenceList[j] > differenceList[largest]) {\n      largest = j;\n    }\n  }\n\n  closestCompany = companies[largest];\n  return closestCompany;\n};\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_ALL_COMPANY:\n      return _objectSpread({}, state, {\n        companies: action.payload\n      });\n\n    case GET_COMPANY:\n      return _objectSpread({}, state, {\n        company: action.payload\n      });\n\n    case ADD_COMPANY:\n      return _objectSpread({}, state, {\n        companies: [...state.companies, action.payload],\n        loading: false\n      });\n\n    case UPDATE_COMPANY:\n      return _objectSpread({}, state, {\n        companies: state.companies.map(company => company.id === action.payload.id ? action.payload : company),\n        loading: false\n      });\n\n    case DELETE_COMPANY:\n      return _objectSpread({}, state, {\n        companies: state.companies.filter(company => company.id !== action.payload),\n        loading: false\n      });\n\n    case SEARCH_COMPANY:\n      return _objectSpread({}, state, {\n        companies: action.payload\n      });\n\n    case SET_SEARCH:\n      return _objectSpread({}, state, {\n        search: true\n      });\n\n    case TARGET_REVENUE:\n      return _objectSpread({}, state, {\n        companies: closestCompany([...state.companies], action.payload)\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case COMPANY_ERROR:\n      console.error(action.payload);\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/harry/Desktop/Insiten-code/company/src/reducers/companyReducer.js"],"names":["GET_ALL_COMPANY","GET_COMPANY","ADD_COMPANY","UPDATE_COMPANY","DELETE_COMPANY","COMPANY_ERROR","SET_LOADING","SET_CURRENT","CLEAR_CURRENT","SEARCH_COMPANY","TARGET_REVENUE","SET_SEARCH","initialState","companies","company","current","loading","search","error","closestCompany","target","differenceList","i","length","Math","abs","Revenue","largest","j","state","action","type","payload","map","id","filter","console"],"mappings":"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","sourcesContent":["import {\n  GET_ALL_COMPANY,\n  GET_COMPANY,\n  ADD_COMPANY,\n  UPDATE_COMPANY,\n  DELETE_COMPANY,\n  COMPANY_ERROR,\n  SET_LOADING,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  SEARCH_COMPANY,\n  TARGET_REVENUE,\n  SET_SEARCH,\n} from \"../actions/types\";\n\nconst initialState = {\n  companies: [],\n  company: null,\n  current: null,\n  loading: false,\n  search: false,\n  error: null,\n};\n\nconst closestCompany = (companies, target) => {\n  var closestCompany = null;\n  var differenceList = [];\n  for (var i = 0; i < companies.length; i++) {\n    differenceList[i] = Math.abs(companies[i].Revenue - target);\n  }\n  var largest = 0;\n  for (var j = 0; j < differenceList.length; j++) {\n    if (differenceList[j] > differenceList[largest]) {\n      largest = j;\n    }\n  }\n  closestCompany = companies[largest];\n  return closestCompany;\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_ALL_COMPANY:\n      return {\n        ...state,\n        companies: action.payload,\n      };\n    case GET_COMPANY:\n      return {\n        ...state,\n        company: action.payload,\n      };\n    case ADD_COMPANY:\n      return {\n        ...state,\n        companies: [...state.companies, action.payload],\n        loading: false,\n      };\n    case UPDATE_COMPANY:\n      return {\n        ...state,\n        companies: state.companies.map(company =>\n          company.id === action.payload.id ? action.payload : company,\n        ),\n        loading: false,\n      };\n    case DELETE_COMPANY:\n      return {\n        ...state,\n        companies: state.companies.filter(\n          company => company.id !== action.payload,\n        ),\n        loading: false,\n      };\n    case SEARCH_COMPANY:\n      return {\n        ...state,\n        companies: action.payload,\n      };\n    case SET_SEARCH:\n      return {\n        ...state,\n        search: true,\n      };\n    case TARGET_REVENUE:\n      return {\n        ...state,\n        companies: closestCompany([...state.companies], action.payload),\n      };\n\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case COMPANY_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}