{"ast":null,"code":"var _jsxFileName = \"/home/harry/Desktop/Insiten-code/company/src/components/companies/Companies.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport Preloader from \"../layout/Preloader\";\nimport { getAllCompany } from \"../../actions/companyActions\";\n\nconst Companies = ({\n  company: {\n    loading,\n    companies\n  },\n  getAllCompany\n}) => {\n  useEffect(() => {\n    getAllCompany(); // eslint-disable-next-line\n  }, [companies]);\n\n  if (loading || companies === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Company List\")), !loading && companies.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"No companies to show...\") : companies.map(company => React.createElement(Company, {\n    company: company,\n    key: company.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n};\n\nCompanies.propTypes = {\n  company: PropTypes.object.isRequired,\n  getAllCompany: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  company: state.company\n});\n\nexport default connect(mapStateToProps, {\n  getAllCompany\n})(Companies);","map":{"version":3,"sources":["/home/harry/Desktop/Insiten-code/company/src/components/companies/Companies.jsx"],"names":["React","useEffect","connect","PropTypes","Preloader","getAllCompany","Companies","company","loading","companies","length","map","id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,aAAT,QAA8B,8BAA9B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAX;AAAmCJ,EAAAA;AAAnC,CAAD,KAAwD;AACxEJ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,aAAa,GADC,CAEd;AACD,GAHQ,EAGN,CAACI,SAAD,CAHM,CAAT;;AAKA,MAAID,OAAO,IAAIC,SAAS,KAAK,IAA7B,EAAmC;AACjC,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIG,CAACD,OAAD,IAAYC,SAAS,CAACC,MAAV,KAAqB,CAAjC,GACC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,GAGCD,SAAS,CAACE,GAAV,CAAcJ,OAAO,IAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAlB;AAA2B,IAAA,GAAG,EAAEA,OAAO,CAACK,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,CAPJ,CADF;AAYD,CAtBD;;AAwBAN,SAAS,CAACO,SAAV,GAAsB;AACpBN,EAAAA,OAAO,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UADN;AAEpBV,EAAAA,aAAa,EAAEF,SAAS,CAACa,IAAV,CAAeD;AAFV,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADiB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACe,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,SAA5C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport Preloader from \"../layout/Preloader\";\nimport { getAllCompany } from \"../../actions/companyActions\";\n\nconst Companies = ({ company: { loading, companies }, getAllCompany }) => {\n  useEffect(() => {\n    getAllCompany();\n    // eslint-disable-next-line\n  }, [companies]);\n\n  if (loading || companies === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <ul className='collection with-header'>\n      <li className='collection-header'>\n        <h4 className='center'>Company List</h4>\n      </li>\n      {!loading && companies.length === 0 ? (\n        <p className='center'>No companies to show...</p>\n      ) : (\n        companies.map(company => <Company company={company} key={company.id} />)\n      )}\n    </ul>\n  );\n};\n\nCompanies.propTypes = {\n  company: PropTypes.object.isRequired,\n  getAllCompany: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  company: state.company,\n});\n\nexport default connect(mapStateToProps, { getAllCompany })(Companies);\n"]},"metadata":{},"sourceType":"module"}