{"ast":null,"code":"import { GET_ALL_COMPANY, GET_COMPANY, ADD_COMPANY, UPDATE_COMPANY, DELETE_COMPANY, COMPANY_ERROR, SET_LOADING, SET_CURRENT, CLEAR_CURRENT } from \"../actions/types\"; // Get all companies from server\n\nexport const getAllCompany = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/companies\");\n    const data = await res.json();\n    dispatch({\n      type: GET_ALL_COMPANY,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Get a specific company from server\n\nexport const getCompany = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/companies/${id}`);\n    const data = await res.json();\n    dispatch({\n      type: GET_COMPANY,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //Add new company\n\nexport const addCompany = company => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/companies\", {\n      method: \"POST\",\n      body: JSON.stringify(company),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_COMPANY,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //Delete company from server\n\nexport const deleteCompany = id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`/comapny/${id}`, {\n      method: \"DELETE\"\n    });\n    dispatch({\n      type: DELETE_COMPANY,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //Update company on server\n\nexport const updateCompany = company => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/companies/${company.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(company),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: UPDATE_COMPANY,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n}; // Set current company\n\nexport const setCurrent = company => {\n  return {\n    type: SET_CURRENT,\n    payload: company\n  };\n}; // Clear current company\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n};","map":{"version":3,"sources":["/home/harry/Desktop/Insiten-code/company/src/actions/companyActions.js"],"names":["GET_ALL_COMPANY","GET_COMPANY","ADD_COMPANY","UPDATE_COMPANY","DELETE_COMPANY","COMPANY_ERROR","SET_LOADING","SET_CURRENT","CLEAR_CURRENT","getAllCompany","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","statusText","getCompany","id","addCompany","company","method","body","JSON","stringify","headers","deleteCompany","updateCompany","setCurrent","clearCurrent"],"mappings":"AAAA,SACEA,eADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,aANF,EAOEC,WAPF,EAQEC,WARF,EASEC,aATF,QAUO,kBAVP,C,CAYA;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACnD,MAAI;AACFC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEhB,eADC;AAEPiB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GARD,CAQE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,aADC;AAEPY,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAfM,C,CAiBP;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMX,QAAN,IAAkB;AAChD,MAAI;AACFC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,cAAaS,EAAG,EAAlB,CAAvB;AACA,UAAMR,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEf,WADC;AAEPgB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GARD,CAQE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,aADC;AAEPY,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAfM,C,CAiBP;;AACA,OAAO,MAAMG,UAAU,GAAGC,OAAO,IAAI,MAAMd,QAAN,IAAkB;AACrD,MAAI;AACFC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAe;AACpCY,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAF8B;AAGpCK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH2B,KAAf,CAAvB;AAOA,UAAMf,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEd,WADC;AAEPe,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAdD,CAcE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,aADC;AAEPY,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CArBM,C,CAuBP;;AACA,OAAO,MAAMU,aAAa,GAAGR,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AACnD,MAAI;AACFC,IAAAA,UAAU;AACV,UAAME,KAAK,CAAE,YAAWS,EAAG,EAAhB,EAAmB;AAC5BG,MAAAA,MAAM,EAAE;AADoB,KAAnB,CAAX;AAGAf,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEZ,cADC;AAEPa,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOJ,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,aADC;AAEPY,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAhBM,C,CAkBP;;AACA,OAAO,MAAMW,aAAa,GAAGP,OAAO,IAAI,MAAMd,QAAN,IAAkB;AACxD,MAAI;AACFC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,cAAaW,OAAO,CAACF,EAAG,EAA1B,EAA6B;AAClDG,MAAAA,MAAM,EAAE,KAD0C;AAElDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAF4C;AAGlDK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHyC,KAA7B,CAAvB;AAOA,UAAMf,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEb,cADC;AAEPc,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAdD,CAcE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,aADC;AAEPY,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CArBM,C,CAuBP;;AACA,OAAO,MAAMT,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLK,IAAAA,IAAI,EAAEV;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,MAAM0B,UAAU,GAAGR,OAAO,IAAI;AACnC,SAAO;AACLR,IAAAA,IAAI,EAAET,WADD;AAELU,IAAAA,OAAO,EAAEO;AAFJ,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMS,YAAY,GAAG,MAAM;AAChC,SAAO;AACLjB,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM","sourcesContent":["import {\n  GET_ALL_COMPANY,\n  GET_COMPANY,\n  ADD_COMPANY,\n  UPDATE_COMPANY,\n  DELETE_COMPANY,\n  COMPANY_ERROR,\n  SET_LOADING,\n  SET_CURRENT,\n  CLEAR_CURRENT\n} from \"../actions/types\";\n\n// Get all companies from server\nexport const getAllCompany = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/companies\");\n    const data = await res.json();\n    dispatch({\n      type: GET_ALL_COMPANY,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n// Get a specific company from server\nexport const getCompany = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/companies/${id}`);\n    const data = await res.json();\n    dispatch({\n      type: GET_COMPANY,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Add new company\nexport const addCompany = company => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/companies\", {\n      method: \"POST\",\n      body: JSON.stringify(company),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_COMPANY,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Delete company from server\nexport const deleteCompany = id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`/comapny/${id}`, {\n      method: \"DELETE\",\n    });\n    dispatch({\n      type: DELETE_COMPANY,\n      payload: id,\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Update company on server\nexport const updateCompany = company => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/companies/${company.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(company),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await res.json();\n    dispatch({\n      type: UPDATE_COMPANY,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: COMPANY_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n\n// Set current company\nexport const setCurrent = company => {\n  return {\n    type: SET_CURRENT,\n    payload: company,\n  };\n};\n\n// Clear current company\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}