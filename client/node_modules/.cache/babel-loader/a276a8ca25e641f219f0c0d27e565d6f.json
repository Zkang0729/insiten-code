{"ast":null,"code":"var _jsxFileName = \"/home/harry/Desktop/Insiten-code/company/src/components/companies/Companies.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Preloader from \"../layout/Preloader\";\nimport Company from \"./Company\";\nimport { getAllCompany } from \"../../actions/companyActions\";\n\nconst Companies = ({\n  company: {\n    loading,\n    companies\n  },\n  getAllCompany\n}) => {\n  useEffect(() => {\n    getAllCompany(); // eslint-disable-next-line\n  }, []);\n\n  if (loading || companies === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Company List\")), React.createElement(\"table\", {\n    className: \"responsive-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Status\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Revenue\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Location\")), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, !loading && companies.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"No companies to show...\") : companies.map(company => React.createElement(Company, {\n    company: company,\n    key: company.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))))));\n};\n\nCompanies.propTypes = {\n  company: PropTypes.object.isRequired,\n  getAllCompany: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  company: state.company\n});\n\nexport default connect(mapStateToProps, {\n  getAllCompany\n})(Companies);","map":{"version":3,"sources":["/home/harry/Desktop/Insiten-code/company/src/components/companies/Companies.jsx"],"names":["React","useEffect","connect","PropTypes","Preloader","Company","getAllCompany","Companies","company","loading","companies","length","map","id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,aAAT,QAA8B,8BAA9B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAX;AAAmCJ,EAAAA;AAAnC,CAAD,KAAwD;AACxEL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,aAAa,GADC,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIG,OAAO,IAAIC,SAAS,KAAK,IAA7B,EAAmC;AACjC,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACD,OAAD,IAAYC,SAAS,CAACC,MAAV,KAAqB,CAAjC,GACC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,GAGCD,SAAS,CAACE,GAAV,CAAcJ,OAAO,IACnB,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAlB;AAA2B,IAAA,GAAG,EAAEA,OAAO,CAACK,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJJ,CAPF,CADF,CAJF,CADF;AA0BD,CApCD;;AAsCAN,SAAS,CAACO,SAAV,GAAsB;AACpBN,EAAAA,OAAO,EAAEL,SAAS,CAACY,MAAV,CAAiBC,UADN;AAEpBV,EAAAA,aAAa,EAAEH,SAAS,CAACc,IAAV,CAAeD;AAFV,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADiB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACgB,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,SAA5C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Preloader from \"../layout/Preloader\";\nimport Company from \"./Company\";\nimport { getAllCompany } from \"../../actions/companyActions\";\n\nconst Companies = ({ company: { loading, companies }, getAllCompany }) => {\n  useEffect(() => {\n    getAllCompany();\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading || companies === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <ul className='collection with-header'>\n      <li className='collection-header'>\n        <h4 className='center'>Company List</h4>\n      </li>\n      <table className=\"responsive-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Status</th>\n            <th>Revenue</th>\n            <th>Location</th>\n          </tr>\n          <tbody>\n            {!loading && companies.length === 0 ? (\n              <p className='center'>No companies to show...</p>\n            ) : (\n              companies.map(company => (\n                <Company company={company} key={company.id} />\n              ))\n            )}\n          </tbody>\n        </thead>\n      </table>\n    </ul>\n  );\n};\n\nCompanies.propTypes = {\n  company: PropTypes.object.isRequired,\n  getAllCompany: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  company: state.company,\n});\n\nexport default connect(mapStateToProps, { getAllCompany })(Companies);\n"]},"metadata":{},"sourceType":"module"}