{"ast":null,"code":"var _jsxFileName = \"/home/harry/Desktop/Insiten-code/company/src/components/companies/Companies.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Preloader from \"../layout/Preloader\";\nimport Company from \"./Company\";\nimport { getAllCompany } from \"../../actions/companyActions\";\n\nconst Companies = ({\n  company: {\n    loading,\n    companies,\n    search,\n    sortedCompanies\n  },\n  getAllCompany\n}) => {\n  useEffect(() => {\n    getAllCompany(); // eslint-disable-next-line\n  }, []);\n\n  if (loading || companies === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Company List\")), !loading && !search && companies.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"No companies to show...\") : search ? sortedCompanies.map(com => React.createElement(Company, {\n    company: com,\n    key: com.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })) : companies.map(comp => React.createElement(Company, {\n    company: comp,\n    key: comp.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n};\n\nCompanies.propTypes = {\n  sortedCompanies: PropTypes.array.isRequired,\n  getAllCompany: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  company: state.company\n});\n\nexport default connect(mapStateToProps, {\n  getAllCompany\n})(Companies);","map":{"version":3,"sources":["/home/harry/Desktop/Insiten-code/company/src/components/companies/Companies.jsx"],"names":["React","useEffect","connect","PropTypes","Preloader","Company","getAllCompany","Companies","company","loading","companies","search","sortedCompanies","length","map","com","id","comp","propTypes","array","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,aAAT,QAA8B,8BAA9B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,MAAtB;AAA8BC,IAAAA;AAA9B,GADQ;AAEjBN,EAAAA;AAFiB,CAAD,KAGZ;AACJL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,aAAa,GADC,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIG,OAAO,IAAIC,SAAS,KAAK,IAA7B,EAAmC;AACjC,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIG,CAACD,OAAD,IAAY,CAACE,MAAb,IAAuBD,SAAS,CAACG,MAAV,KAAqB,CAA5C,GACC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,GAEGF,MAAM,GACRC,eAAe,CAACE,GAAhB,CAAoBC,GAAG,IAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,GAAlB;AAAuB,IAAA,GAAG,EAAEA,GAAG,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CADQ,GAGRN,SAAS,CAACI,GAAV,CAAcG,IAAI,IAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,IAAlB;AAAwB,IAAA,GAAG,EAAEA,IAAI,CAACD,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CATJ,CADF;AAcD,CA3BD;;AA6BAT,SAAS,CAACW,SAAV,GAAsB;AACpBN,EAAAA,eAAe,EAAET,SAAS,CAACgB,KAAV,CAAgBC,UADb;AAEpBd,EAAAA,aAAa,EAAEH,SAAS,CAACkB,IAAV,CAAeD;AAFV,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCf,EAAAA,OAAO,EAAEe,KAAK,CAACf;AADiB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACoB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,SAA5C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Preloader from \"../layout/Preloader\";\nimport Company from \"./Company\";\nimport { getAllCompany } from \"../../actions/companyActions\";\n\nconst Companies = ({\n  company: { loading, companies, search, sortedCompanies },\n  getAllCompany,\n}) => {\n  useEffect(() => {\n    getAllCompany();\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading || companies === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <ul className='collection with-header'>\n      <li className='collection-header'>\n        <h4 className='center'>Company List</h4>\n      </li>\n      {!loading && !search && companies.length === 0 ? (\n        <p className='center'>No companies to show...</p>\n      ) : search ? (\n        sortedCompanies.map(com => <Company company={com} key={com.id} />)\n      ) : (\n        companies.map(comp => <Company company={comp} key={comp.id} />)\n      )}\n    </ul>\n  );\n};\n\nCompanies.propTypes = {\n  sortedCompanies: PropTypes.array.isRequired,\n  getAllCompany: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  company: state.company,\n});\n\nexport default connect(mapStateToProps, { getAllCompany })(Companies);\n"]},"metadata":{},"sourceType":"module"}