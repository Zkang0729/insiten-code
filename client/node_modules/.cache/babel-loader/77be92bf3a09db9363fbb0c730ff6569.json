{"ast":null,"code":"import _objectSpread from \"/home/harry/Desktop/Insiten-code/company/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_ALL_COMPANY, GET_COMPANY, ADD_COMPANY, UPDATE_COMPANY, DELETE_COMPANY, COMPANY_ERROR, SET_LOADING, SET_CURRENT, CLEAR_CURRENT, SEARCH_COMPANY, TARGET_REVENUE } from \"../actions/types\";\nconst initialState = {\n  companies: [],\n  company: null,\n  current: null,\n  loading: false,\n  error: null\n};\n\nconst closestCompany = (companies, target) => {\n  console.log(target);\n  var closestCompany = [];\n  var differenceList = [];\n\n  for (var i = 0; i < companies.length; i++) {\n    differenceList[i] = Math.abs(companies[i].Revenue - target);\n  }\n\n  var largest = 0;\n\n  for (var j = 0; j < differenceList.length; j++) {\n    if (differenceList[j] > differenceList[largest]) {\n      largest = j;\n    }\n  }\n\n  closestCompany.push(companies[largest]);\n  return closestCompany;\n};\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_ALL_COMPANY:\n      return _objectSpread({}, state, {\n        companies: action.payload\n      });\n\n    case GET_COMPANY:\n      return _objectSpread({}, state, {\n        company: action.payload\n      });\n\n    case ADD_COMPANY:\n      return _objectSpread({}, state, {\n        companies: [...state.companies, action.payload],\n        loading: false\n      });\n\n    case UPDATE_COMPANY:\n      return _objectSpread({}, state, {\n        companies: state.companies.map(company => company.id === action.payload.id ? action.payload : company),\n        loading: false\n      });\n\n    case DELETE_COMPANY:\n      return _objectSpread({}, state, {\n        companies: state.companies.filter(company => company.id !== action.payload),\n        loading: false\n      });\n\n    case SEARCH_COMPANY:\n      return _objectSpread({}, state, {\n        companies: action.payload\n      });\n\n    case TARGET_REVENUE:\n      return _objectSpread({}, state, {\n        companies: closestCompany(...state.companies, action.payload)\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case COMPANY_ERROR:\n      console.error(action.payload);\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/harry/Desktop/Insiten-code/company/src/reducers/companyReducer.js"],"names":["GET_ALL_COMPANY","GET_COMPANY","ADD_COMPANY","UPDATE_COMPANY","DELETE_COMPANY","COMPANY_ERROR","SET_LOADING","SET_CURRENT","CLEAR_CURRENT","SEARCH_COMPANY","TARGET_REVENUE","initialState","companies","company","current","loading","error","closestCompany","target","console","log","differenceList","i","length","Math","abs","Revenue","largest","j","push","state","action","type","payload","map","id","filter"],"mappings":"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","sourcesContent":["import {\n  GET_ALL_COMPANY,\n  GET_COMPANY,\n  ADD_COMPANY,\n  UPDATE_COMPANY,\n  DELETE_COMPANY,\n  COMPANY_ERROR,\n  SET_LOADING,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  SEARCH_COMPANY,\n  TARGET_REVENUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  companies: [],\n  company: null,\n  current: null,\n  loading: false,\n  error: null,\n};\n\nconst closestCompany = (companies, target) => {\n  console.log(target);\n  var closestCompany = [];\n  var differenceList = [];\n  for (var i = 0; i < companies.length; i++) {\n    differenceList[i] = Math.abs(companies[i].Revenue - target);\n  }\n  var largest = 0;\n  for (var j = 0; j < differenceList.length; j++) {\n    if (differenceList[j] > differenceList[largest]) {\n      largest = j;\n    }\n  }\n  closestCompany.push(companies[largest]);\n  return closestCompany;\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_ALL_COMPANY:\n      return {\n        ...state,\n        companies: action.payload,\n      };\n    case GET_COMPANY:\n      return {\n        ...state,\n        company: action.payload,\n      };\n    case ADD_COMPANY:\n      return {\n        ...state,\n        companies: [...state.companies, action.payload],\n        loading: false,\n      };\n    case UPDATE_COMPANY:\n      return {\n        ...state,\n        companies: state.companies.map(company =>\n          company.id === action.payload.id ? action.payload : company,\n        ),\n        loading: false,\n      };\n    case DELETE_COMPANY:\n      return {\n        ...state,\n        companies: state.companies.filter(\n          company => company.id !== action.payload,\n        ),\n        loading: false,\n      };\n    case SEARCH_COMPANY:\n      return {\n        ...state,\n        companies: action.payload,\n      };\n    case TARGET_REVENUE:\n      return {\n        ...state,\n        companies: closestCompany(...state.companies, action.payload),\n      };\n\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case COMPANY_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}